% \iffalse meta-comment
%
% Copyright (C) 2021-2022 by Jinwen XU
% ------------------------------------
%
% This file may be distributed and/or modified under the conditions of the LaTeX
% Project Public License, either version 1.3c of this license or (at your option)
% any later version. The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% \fi
%
%<*driver>
\ProvidesFile{minimalist.dtx}
%</driver>
\NeedsTeXFormat{LaTeX2e}[2020-10-01]
\RequirePackage{l3keys2e}
%
%<*minimart>
\ProvidesExplClass
  {minimart}
  {2022/03/17} {}
  {A simple and clear article style}

\tl_const:Nn \l__minimclass_base_class_tl { article }
%</minimart>
%
%<*minimbook>
\ProvidesExplClass
  {minimbook}
  {2022/03/17} {}
  {A simple and clear book style}

\tl_const:Nn \l__minimclass_base_class_tl { book }
%</minimbook>
%
%<*einfart>
\ProvidesExplClass
  {einfart}
  {2022/03/17} {}
  {A simple and clear article style}

\tl_const:Nn \l__minimclass_base_class_tl { article }
%</einfart>
%
%<*simplivre>
\ProvidesExplClass
  {simplivre}
  {2022/03/17} {}
  {A simple and clear book style}

\tl_const:Nn \l__minimclass_base_class_tl { book }
%</simplivre>
%
%<*minimalist>
\ProvidesExplPackage
  {minimalist}
  {2022/03/17} {}
  {A simple and clear style for articles and books}
%</minimalist>
%
%<*minimalist-plain>
\ProvidesExplPackage
  {minimalist-plain}
  {2022/03/17} {}
  {The plain style of minimalist}
%</minimalist-plain>
%
%<*minimalist-classical>
\ProvidesExplPackage
  {minimalist-classical}
  {2022/03/17} {}
  {The classical style of minimalist}
%</minimalist-classical>

%<*class>

\bool_new:N \l__minimclass_load_custom_font_file_bool
\bool_set_false:N \l__minimclass_load_custom_font_file_bool

%<*einfart|simplivre>
\bool_new:N \l__minimclass_load_custom_font_file_latin_bool
\bool_set_false:N \l__minimclass_load_custom_font_file_latin_bool

\bool_new:N \l__minimclass_load_custom_font_file_cjk_bool
\bool_set_false:N \l__minimclass_load_custom_font_file_cjk_bool

\bool_new:N \l__minimclass_load_custom_font_file_math_bool
\bool_set_false:N \l__minimclass_load_custom_font_file_math_bool
%</einfart|simplivre>

\keys_define:nn { minimclass }
  {
    , draft                   .bool_set:N         = \l__minimclass_fast_bool
    , draft                   .initial:n          = { false }
    , fast                    .bool_set:N         = \l__minimclass_fast_bool

    , classical               .bool_set:N         = \l__minimclass_classical_bool
    , classical               .initial:n          = { false }

    , use indent              .bool_set:N         = \l__minimclass_useindent_bool
    , use indent              .initial:n          = { true }
    , use~indent              .bool_set:N         = \l__minimclass_useindent_bool
    , use-indent              .bool_set:N         = \l__minimclass_useindent_bool

    , load custom font file   .code:n             = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_str { #1 }
%<*einfart|simplivre>
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_latin_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_latin_str { minimalist.font.latin }
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_cjk_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_cjk_str   { minimalist.font.cjk }
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_math_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_math_str  { minimalist.font.math }
%</einfart|simplivre>
                                                    }
    , load custom font file   .default:n          = { minimalist.font }
    , load~custom~font~file   .code:n             = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_str { #1 }
                                                    }
    , load~custom~font~file   .default:n          = { minimalist.font }
    , load-custom-font-file   .code:n             = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_str { #1 }
                                                    }
    , load-custom-font-file   .default:n          = { minimalist.font }

%<*einfart|simplivre>
    , load custom latin font file   .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_latin_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_latin_str { #1 }
                                                    }
    , load custom latin font file   .default:n    = { minimalist.font.latin }
    , load~custom~latin~font~file   .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_latin_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_latin_str { #1 }
                                                    }
    , load~custom~latin~font~file   .default:n    = { minimalist.font.latin }
    , load-custom-latin-font-file   .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_latin_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_latin_str { #1 }
                                                    }
    , load-custom-latin-font-file   .default:n    = { minimalist.font.latin }

    , load custom cjk font file     .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_cjk_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_cjk_str { #1 }
                                                    }
    , load custom cjk font file     .default:n    = { minimalist.font.cjk }
    , load~custom~cjk~font~file     .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_cjk_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_cjk_str { #1 }
                                                    }
    , load~custom~cjk~font~file     .default:n    = { minimalist.font.cjk }
    , load-custom-cjk-font-file     .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_cjk_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_cjk_str { #1 }
                                                    }
    , load-custom-cjk-font-file     .default:n    = { minimalist.font.cjk }

    , load custom math font file    .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_math_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_math_str { #1 }
                                                    }
    , load custom math font file    .default:n    = { minimalist.font.math }
    , load~custom~math~font~file    .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_math_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_math_str { #1 }
                                                    }
    , load~custom~math~font~file    .default:n    = { minimalist.font.math }
    , load-custom-math-font-file    .code:n       = {
                                                      \bool_set_true:N \l__minimclass_load_custom_font_file_math_bool
                                                      \str_set:Nn \l__minimclass_custom_font_file_math_str { #1 }
                                                    }
    , load-custom-math-font-file    .default:n    = { minimalist.font.math }
%</einfart|simplivre>

    , a4paper                 .bool_set:N         = \l__minimclass_a_four_paper_bool
    , a4paper                 .initial:n          = { false }
    , b5paper                 .bool_set:N         = \l__minimclass_b_five_paper_bool
    , b5paper                 .initial:n          = { false }

    , 11pt                    .code:n             = { \PassOptionsToClass { \CurrentOption } { \l__minimclass_base_class_tl } }
    , 12pt                    .code:n             = { \PassOptionsToClass { \CurrentOption } { \l__minimclass_base_class_tl } }

    , unknown                 .code:n             = {
                                                      \PassOptionsToPackage { \CurrentOption } { minimalist }
                                                    }
  }
\ProcessKeysOptions { minimclass }

\LoadClass{\l__minimclass_base_class_tl}

\bool_if:NT \l__minimclass_classical_bool
  {
    \bool_set_false:N \l__minimclass_useindent_bool
  }

%%================================
%%  Page layout
%%================================
\RequirePackage { silence }
\WarningFilter { geometry } { Over-specification }

\PassOptionsToPackage { heightrounded } { geometry }
\RequirePackage { geometry }

\geometry
  {
    papersize = { 7in, 10in },
    total = { 5.535in, 8.300in },
    centering,
    footnotesep = 2em plus 2pt minus 2pt,
  }

\bool_if:NT \l__minimclass_b_five_paper_bool
  {
    \geometry
      {
        b5paper,
        total = { 5.535in, 8.160in },
        centering,
        footnotesep = 2em plus 2pt minus 2pt,
      }
  }

\bool_if:NT \l__minimclass_a_four_paper_bool
  {
    \geometry
      {
        a4paper,
        total = { 6.500in, 9.685in },
        centering,
        footnotesep = 2em plus 2pt minus 2pt,
      }
  }

\bool_if:NT \l__minimclass_fast_bool
  {
    \PassOptionsToPackage { fast } { minimalist }
    \RequirePackage { draftwatermark }
    \DraftwatermarkOptions { text = { \normalfont DRAFT }, color = paper!97!-paper }
  }

\bool_if:NTF \l__minimclass_useindent_bool
  {
    \RequirePackage { indentfirst }
  }
  {
    \hook_gput_code:nnn { begindocument/before } { minimclass }
      {
        \RequirePackage { parskip }
      }
  }

\RequirePackage { minimalist }

%%================================
%%  Fonts
%%================================
\WarningFilter { latexfont } { Font~shape }
\WarningFilter { latexfont } { Some~font  }

\cs_new_protected:Nn \__minimclass_load_file_or_config:Nnn
  {
    \bool_if:NT #1
      {
        \exp_args:Nx \file_if_exist:nT { #2 }
          {
            \exp_args:Nx \file_input:n { #2 }
            \use_none:nn
          }
      }
    \use:n { #3 }
  }

%<*einfart|simplivre>
\cs_new_protected:Nn \__minimclass_if_font_exist:nnn
  {
    \bool_if:NTF \l__minimclass_fast_bool
      { #3 }
      { \fontspec_font_if_exist:nTF { #1 } { #2 } { #3 } }
  }
%</einfart|simplivre>

\__minimclass_load_file_or_config:Nnn \l__minimclass_load_custom_font_file_bool { \l__minimclass_custom_font_file_str }
  {
    \RequirePackage { projlib-font }

%<*minimart|minimbook>
    \bool_if:NF \g_projlib_font_already_set_bool
      {
        \RequirePackage { mathpazo }
        \RequirePackage { newpxtext }
        \RequirePackage { amssymb }
      }
%</minimart|minimbook>
%
%<*einfart|simplivre>
    \bool_if:NF \g_projlib_font_already_set_bool
      {
        \bool_if:NT \l__minimclass_fast_bool
          {
            \RequirePackage { mathpazo }
          }

        \PassOptionsToPackage { no-math,quiet } { fontspec }
        \RequirePackage { fontspec }

        \__minimclass_load_file_or_config:Nnn \l__minimclass_load_custom_font_file_latin_bool { \l__minimclass_custom_font_file_latin_str }
          {
            \__minimclass_if_font_exist:nnn { Palatino~Linotype }
              {
                \bool_if:NTF \l__projlib_font_useosf_bool
                  {
                    \setmainfont { Palatino~Linotype } [ Numbers = OldStyle ]
                  }
                  {
                    \setmainfont { Palatino~Linotype }
                  }
              }
              {
                \bool_if:NTF \l__projlib_font_useosf_bool
                  {
                    \setmainfont { TeXGyrePagellaX-Regular.otf }
                      [
                        BoldFont       = TeXGyrePagellaX-Bold.otf ,
                        ItalicFont     = TeXGyrePagellaX-Italic.otf ,
                        BoldItalicFont = TeXGyrePagellaX-BoldItalic.otf ,
                        Numbers        = OldStyle ,
                      ]
                  }
                  {
                    \setmainfont { TeXGyrePagellaX-Regular.otf }
                      [
                        BoldFont       = TeXGyrePagellaX-Bold.otf ,
                        ItalicFont     = TeXGyrePagellaX-Italic.otf ,
                        BoldItalicFont = TeXGyrePagellaX-BoldItalic.otf ,
                      ]
                  }
              }
            \setsansfont { SourceSansPro-Regular.otf }
              [
                Scale          = MatchLowercase ,
                BoldFont       = SourceSansPro-Bold.otf ,
                ItalicFont     = SourceSansPro-RegularIt.otf ,
                BoldItalicFont = SourceSansPro-BoldIt.otf ,
              ]
            \setmonofont { NewCMMono10-Regular.otf }
              [
                Scale          = 1.05 ,
                BoldFont       = NewCMMono10-Bold.otf ,
                ItalicFont     = NewCMMono10-Italic.otf ,
                BoldItalicFont = NewCMMono10-BoldOblique.otf ,
              ]

            \projlib_language_set_linespacing_latin:n { \setstretch { 1.07 } }
          }
      }


    \PassOptionsToPackage { fontset = none, scheme = plain } { ctex }
    \RequirePackage { ctex }


    \__minimclass_load_file_or_config:Nnn \l__minimclass_load_custom_font_file_cjk_bool { \l__minimclass_custom_font_file_cjk_str }
      {
        \__minimclass_if_font_exist:nnn { SourceHanSerifSC-Regular }
          {
            \setCJKmainfont { SourceHanSerifSC-Regular }
              [
                BoldFont       = SourceHanSerifSC-Bold ,
                ItalicFont     = * ,
                BoldItalicFont = SourceHanSerifSC-Bold ,
              ]
          }
          {
            \setCJKmainfont { FandolSong-Regular.otf }
              [
                BoldFont       = FandolSong-Bold.otf ,
                ItalicFont     = FandolKai-Regular.otf ,
                BoldItalicFont = FandolKai-Regular.otf ,
                BoldItalicFeatures = { FakeBold = 4 } ,
              ]
          }

        \__minimclass_if_font_exist:nnn { SourceHanSansSC-Regular }
          {
            \setCJKsansfont{SourceHanSansSC-Regular}
              [
                BoldFont       = SourceHanSansSC-Bold ,
                ItalicFont     = * ,
                BoldItalicFont = SourceHanSansSC-Bold ,
              ]
          }
          {
            \setCJKsansfont { FandolHei-Regular.otf }
              [
                BoldFont       = FandolHei-Bold.otf ,
                ItalicFont     = * ,
                BoldItalicFont = FandolHei-Bold.otf ,
              ]
          }

        \__minimclass_if_font_exist:nnn { SourceHanMonoSC-Regular }
          {
            \setCJKmonofont { SourceHanMonoSC-Regular }
              [
                BoldFont       = SourceHanMonoSC-Medium ,
                ItalicFont     = * ,
                BoldItalicFont = SourceHanMonoSC-Medium ,
              ]
          }
          {
            \setCJKmonofont { FandolFang-Regular.otf }
              [
                BoldFont       = * ,
                BoldFeatures   = { FakeBold = 4 } ,
                ItalicFont     = * ,
                BoldItalicFont = * ,
                BoldItalicFeatures = { FakeBold = 4 } ,
              ]
          }

        \bool_if:NT \g__projlib_language_enabled_schinese_bool
          {
            \__minimclass_if_font_exist:nnn { SourceHanSerifSC-Regular }
              {
                \setCJKfamilyfont { SCmain } { SourceHanSerifSC-Regular }
                  [
                    BoldFont       = SourceHanSerifSC-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSerifSC-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { SCmain } { FandolSong-Regular.otf }
                  [
                    BoldFont       = FandolSong-Bold.otf ,
                    ItalicFont     = FandolKai-Regular.otf ,
                    BoldItalicFont = FandolKai-Regular.otf ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanSansSC-Regular }
              {
                \setCJKfamilyfont { SCsans } { SourceHanSansSC-Regular }
                  [
                    BoldFont       = SourceHanSansSC-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSansSC-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { SCsans } { FandolHei-Regular.otf }
                  [
                    BoldFont       = FandolHei-Bold.otf ,
                    ItalicFont     = * ,
                    BoldItalicFont = FandolHei-Bold.otf ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanMonoSC-Regular }
              {
                \setCJKfamilyfont { SCmono } { SourceHanMonoSC-Regular }
                  [
                    BoldFont       = SourceHanMonoSC-Medium ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanMonoSC-Medium ,
                  ]
              }
              {
                \setCJKfamilyfont { SCmono } { FandolFang-Regular.otf }
                  [
                    BoldFont       = * ,
                    BoldFeatures   = { FakeBold = 4 } ,
                    ItalicFont     = * ,
                    BoldItalicFont = * ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
          }

        \bool_if:NT \g__projlib_language_enabled_tchinese_bool
          {
            \__minimclass_if_font_exist:nnn { SourceHanSerifTC-Regular }
              {
                \setCJKfamilyfont { TCmain } { SourceHanSerifTC-Regular }
                  [
                    BoldFont       = SourceHanSerifTC-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSerifTC-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { TCmain } { FandolSong-Regular.otf }
                  [
                    BoldFont       = FandolSong-Bold.otf ,
                    ItalicFont     = FandolKai-Regular.otf ,
                    BoldItalicFont = FandolKai-Regular.otf ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanSansTC-Regular }
              {
                \setCJKfamilyfont { TCsans } { SourceHanSansTC-Regular }
                  [
                    BoldFont       = SourceHanSansTC-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSansTC-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { TCsans } { FandolHei-Regular.otf }
                  [
                    BoldFont       = FandolHei-Bold.otf ,
                    ItalicFont     = * ,
                    BoldItalicFont = FandolHei-Bold.otf ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanMonoTC-Regular }
              {
                \setCJKfamilyfont { TCmono } { SourceHanMonoTC-Regular }
                  [
                    BoldFont       = SourceHanMonoTC-Medium ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanMonoTC-Medium ,
                  ]
              }
              {
                \setCJKfamilyfont { TCmono } { FandolFang-Regular.otf }
                  [
                    BoldFont       = * ,
                    BoldFeatures   = { FakeBold = 4 } ,
                    ItalicFont     = * ,
                    BoldItalicFont = * ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
          }

        \bool_if:NT \g__projlib_language_enabled_japanese_bool
          {
            \__minimclass_if_font_exist:nnn { SourceHanSerif-Regular }
              {
                \setCJKfamilyfont { JPmain } { SourceHanSerif-Regular }
                  [
                    BoldFont       = SourceHanSerif-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSerif-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { JPmain } { FandolSong-Regular.otf }
                  [
                    BoldFont       = FandolSong-Bold.otf ,
                    ItalicFont     = FandolKai-Regular.otf ,
                    BoldItalicFont = FandolKai-Regular.otf ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanSans-Regular }
              {
                \setCJKfamilyfont { JPsans } { SourceHanSans-Regular }
                  [
                    BoldFont       = SourceHanSans-Bold ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanSans-Bold ,
                  ]
              }
              {
                \setCJKfamilyfont { JPsans } { FandolHei-Regular.otf }
                  [
                    BoldFont       = FandolHei-Bold.otf ,
                    ItalicFont     = * ,
                    BoldItalicFont = FandolHei-Bold.otf ,
                  ]
              }
            \__minimclass_if_font_exist:nnn { SourceHanMono-Regular }
              {
                \setCJKfamilyfont { JPmono } { SourceHanMono-Regular }
                  [
                    BoldFont       = SourceHanMono-Medium ,
                    ItalicFont     = * ,
                    BoldItalicFont = SourceHanMono-Medium ,
                  ]
              }
              {
                \setCJKfamilyfont { JPmono } { FandolFang-Regular.otf }
                  [
                    BoldFont       = * ,
                    BoldFeatures   = { FakeBold = 4 } ,
                    ItalicFont     = * ,
                    BoldItalicFont = * ,
                    BoldItalicFeatures = { FakeBold = 4 } ,
                  ]
              }
          }

        \cs_new:Nn \minimclass_cjk_sffamily: {}
        \cs_new:Nn \minimclass_cjk_ttfamily: {}

        \hook_gput_code:nnn { cmd/sffamily/after } { minimclass } { \minimclass_cjk_sffamily: }
        \hook_gput_code:nnn { cmd/ttfamily/after } { minimclass } { \minimclass_cjk_ttfamily: }

        \AddLanguageSetting [schinese]
          {
            \cs_set:Nn \minimclass_cjk_sffamily: { \CJKfamily { SCsans } }
            \cs_set:Nn \minimclass_cjk_ttfamily: { \CJKfamily { SCmono } }
            \CJKfamily { SCmain }
          }
        \AddLanguageSetting [tchinese]
          {
            \cs_set:Nn \minimclass_cjk_sffamily: { \CJKfamily { TCsans } }
            \cs_set:Nn \minimclass_cjk_ttfamily: { \CJKfamily { TCmono } }
            \CJKfamily { TCmain }
          }
        \AddLanguageSetting [japanese]
          {
            \cs_set:Nn \minimclass_cjk_sffamily: { \CJKfamily { JPsans } }
            \cs_set:Nn \minimclass_cjk_ttfamily: { \CJKfamily { JPmono } }
            \CJKfamily { JPmain }
          }

        \tl_gset:Nn \g_minimalist_title_font_common_tl { \minimclass_cjk_sffamily: }
      }


    \__minimclass_load_file_or_config:Nnn \l__minimclass_load_custom_font_file_math_bool { \l__minimclass_custom_font_file_math_str }
      {
        \bool_if:NF \g_projlib_font_already_set_bool
          {
            \bool_if:NTF \l__minimclass_fast_bool
              {
                \RequirePackage { amssymb }
              }
              {
                \PassOptionsToPackage { warnings-off = { mathtools-colon, mathtools-overbracket } } { unicode-math }
                \RequirePackage { unicode-math }
                \unimathsetup { math-style = ISO, partial = upright, nabla = upright }
                \setmathfont { Asana-Math.otf }
                \__minimclass_if_font_exist:nnn { Neo~Euler }
                  {
                    \setmathfont { Neo~Euler }
                      [
                        range             = { up / { Latin, latin, Greek, greek },
                                              bfup / { Latin, latin, Greek, greek },
                                              cal, bfcal, frak, bffrak,
                                              `(, `), `[, `], `\{, `\}, `:, `=, \ne, \equiv, `/, \backslash,
                                              \in, \notin, \ni, \subset, \supset, \subseteq, \supseteq,
                                              \rightarrow, \leftarrow, \leftrightarrow,
                                              \longleftarrow, \longrightarrow, \longleftrightarrow,
                                              \Leftarrow, \Rightarrow, \Leftrightarrow,
                                              \Longleftarrow, \Longrightarrow, \Longleftrightarrow,
                                              \nrightarrow, \nleftarrow, \nleftrightarrow,
                                              \nLeftarrow, \nRightarrow, \nLeftrightarrow,
                                              \mapsto, \hookrightarrow, \hookleftarrow,
                                              \leftharpoonup, \rightharpoonup, \leftharpoondown, \rightharpoondown,
                                              \rightleftharpoons, \leftrightharpoons,
                                              \sum, \prod, \coprod,
                                              \sqrt, \int, \iint, \iiint, \oint
                                            },
                        script-features   = {},
                        sscript-features  = {},
                        Scale             = 1.05,
                      ]
                  }{}
                \setmathfont { latinmodern-math.otf }
                  [
                    range = { \leq, \geq, \ll, \gg, \lll, \ggg, \leqslant, \geqslant },
                    Scale = 0.95,
                  ]
                \setmathfont { texgyrepagella-math.otf }
                  [
                    range = { up / num, bfup / num }
                  ]

                \hook_gput_code:nnn { begindocument } { minimclass }
                  {
                    \NewCommandCopy \minimclass_backup_mid: \mid
                    \RenewDocumentCommand \mid {}
                      { \skip_horizontal:n {-.15em} \minimclass_backup_mid: \skip_horizontal:n {-.15em} }
                    \NewCommandCopy \minimclass_backup_nmid: \nmid
                    \RenewDocumentCommand \nmid {}
                      { \skip_horizontal:n {-.15em} \minimclass_backup_nmid: \skip_horizontal:n {-.15em} }
                  }

                \RequirePackage { tikz-cd }

                \box_new:N \l__minimclass_xarrows_above_box
                \box_new:N \l__minimclass_xarrows_below_box
                \dim_new:N \l__minimclass_xarrows_length_dim
                \cs_new_protected:Nn \minimclass_xarrows_generic:nnnn
                  % #3 = option of \tikz
                  % #4 = edge of \draw
                  {
                    \hbox_set:Nn \l__minimclass_xarrows_below_box { \ensuremath { \scriptstyle #1 } }
                    \hbox_set:Nn \l__minimclass_xarrows_above_box { \ensuremath { \scriptstyle #2 } }
                    \dim_set:Nn \l__minimclass_xarrows_length_dim
                      { \dim_eval:n { \dim_max:nn { \box_wd:N \l__minimclass_xarrows_below_box } { \box_wd:N \l__minimclass_xarrows_above_box } + .8em } }
                    \mathrel
                      {
                        \tikz [ #3, baseline = -.55ex, every~node/.style = { inner~sep = 0pt } ]
                          \draw (0,0) #4
                            node [ below = 3pt ] { \box_use:N \l__minimclass_xarrows_below_box }
                            node [ above = 2pt ] { \box_use:N \l__minimclass_xarrows_above_box }
                            ( \l__minimclass_xarrows_length_dim ,0) ;
                      }
                  }

                \RenewDocumentCommand \xrightarrow { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } { -> } { -- }
                  }
                \RenewDocumentCommand \xleftarrow { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } { <- } { -- }
                  }
                \RenewDocumentCommand \xleftrightarrow { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } { <-> } { -- }
                  }
                \RenewDocumentCommand \xhookrightarrow { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } {} { edge [ commutative~diagrams/hookrightarrow ] }
                  }
                \RenewDocumentCommand \xhookleftarrow { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } {} { edge [ commutative~diagrams/hookleftarrow ] }
                  }
                \RenewDocumentCommand \xmapsto { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } {} { edge [ commutative~diagrams/mapsto ] }
                  }
                \NewDocumentCommand \xlongequal { O{} m }
                  {
                    \minimclass_xarrows_generic:nnnn { #1 } { #2 } {} { edge [ commutative~diagrams/equal ] }
                  }
                \hook_gput_code:nnn { begindocument/end } { minimclass }
                  {
                    \RenewDocumentCommand \twoheadrightarrow {}
                      {
                        \minimclass_xarrows_generic:nnnn { \,\, } {} {} { edge [ commutative~diagrams/twoheadrightarrow ] }
                      }
                    \RenewDocumentCommand \twoheadleftarrow {}
                      {
                        \minimclass_xarrows_generic:nnnn { \,\, } {} {} { edge [ commutative~diagrams/twoheadleftarrow ] }
                      }
                  }
              }
          }
      }
%</einfart|simplivre>
  }

\PassOptionsToPackage { all } { nowidow }
\RequirePackage { nowidow }
\RequirePackage { embrac }

%%================================
%%  Graphics
%%================================
\RequirePackage { graphicx }
\graphicspath { { images/ } }
\RequirePackage { wrapfig }
\RequirePackage { float }
\RequirePackage { caption }
\captionsetup { font = small }
%</class>
%
%
%<*minimalist>
\keys_define:nn { minimalist }
  {
    , draft             .bool_set:N         = \l__minimalist_fast_bool
    , draft             .initial:n          = { false }
    , fast              .bool_set:N         = \l__minimalist_fast_bool

    , style             .str_set:N          = \l__minimalist_style_str
    , style             .initial:n          = { plain }
    , classical         .meta:n             = { style = classical }

    , use-boldface      .bool_set:N         = \l__minimalist_use_boldface_bool
    , use-boldface      .initial:n          = { false }
    , use~boldface      .bool_set:N         = \l__minimalist_use_boldface_bool
    , use boldface      .bool_set:N         = \l__minimalist_use_boldface_bool
    , usebf             .bool_set:N         = \l__minimalist_use_boldface_bool
    , allow-boldface    .bool_set:N         = \l__minimalist_use_boldface_bool
    , allow~boldface    .bool_set:N         = \l__minimalist_use_boldface_bool
    , allow boldface    .bool_set:N         = \l__minimalist_use_boldface_bool
    , allowbf           .bool_set:N         = \l__minimalist_use_boldface_bool
    , runin             .bool_set:N         = \l__minimalist_runin_bool
    , runin             .initial:n          = { false }

    , theorem-in-new-line .bool_set:N       = \l__minimalist_theorem_in_new_line_bool
    , theorem-in-new-line .initial:n        = { false }
    , theorem~in~new~line .bool_set:N       = \l__minimalist_theorem_in_new_line_bool
    , theorem in new line .bool_set:N       = \l__minimalist_theorem_in_new_line_bool

    , unknown           .code:n             = {
                                                \PassOptionsToPackage { \CurrentOption } { projlib-language }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-author }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-datetime }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-draft }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-font }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-logo }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-math }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-paper }
                                                \PassOptionsToPackage { \CurrentOption } { projlib-theorem }
                                              }
  }
\ProcessKeysOptions { minimalist }

\bool_new:N \l__minimalist_is_book_bool
\cs_if_exist:cTF { c@chapter }
  {
    \bool_set_true:N \l__minimalist_is_book_bool
  }
  {
    \bool_set_false:N \l__minimalist_is_book_bool
  }

%%================================
%%  Paper configuration
%%================================
\RequirePackage { projlib-paper }

%%================================
%%  Multi-language support
%%================================
\RequirePackage { projlib-language }

%%================================
%%  Loading the style
%%================================
\exp_args:No \RequirePackage { minimalist- \l__minimalist_style_str }
%</minimalist>
%
%<*style>
\@ifpackageloaded { minimalist } {}
  {
    \msg_new:nnn { \@currname }
      { minimalist-not-loaded }
      { "#1"~is~an~internal~style~of~"minimalist".~To~use~it,~you~must~load~the~package~"minimalist"~first. }
    \msg_warning:nnx { \@currname } { minimalist-not-loaded } { \@currname }
    \endinput
  }

%%================================
%%  Title fonts
%%================================
\RequirePackage { anyfontsize }

\bool_if:NTF \l__minimalist_use_boldface_bool
  {
    \cs_new:Nn \minimalist_bfseries: { \bfseries \colorlet{minimalist-temp-color}{.} \color{minimalist-temp-color!70!paper} }
  }
  {
    \cs_new:Nn \minimalist_bfseries: {}
  }

\tl_new:N \g_minimalist_title_font_common_tl

\tl_new:N \g_minimalist_title_font_part_tl
\tl_new:N \g_minimalist_title_font_chapter_tl
\tl_new:N \g_minimalist_title_font_section_tl
\tl_new:N \g_minimalist_title_font_subsection_tl
\tl_new:N \g_minimalist_title_font_subsubsection_tl
\tl_new:N \g_minimalist_title_font_paragraph_tl

%<*minimalist-plain>
\tl_gset:Nn \g_minimalist_title_font_part_tl          { \minimalist_bfseries: \g_minimalist_title_font_common_tl }
\tl_gset:Nn \g_minimalist_title_font_chapter_tl       { \minimalist_bfseries: \g_minimalist_title_font_common_tl }
\tl_gset:Nn \g_minimalist_title_font_section_tl       { \minimalist_bfseries: \g_minimalist_title_font_common_tl \scshape }
\tl_gset:Nn \g_minimalist_title_font_subsection_tl    { \minimalist_bfseries: \g_minimalist_title_font_common_tl \scshape }
\tl_gset:Nn \g_minimalist_title_font_subsubsection_tl { \minimalist_bfseries: \g_minimalist_title_font_common_tl }
\tl_gset:Nn \g_minimalist_title_font_paragraph_tl     { \minimalist_bfseries: \g_minimalist_title_font_common_tl \scshape }
%</minimalist-plain>
%<*minimalist-classical>
\tl_gset:Nn \g_minimalist_title_font_part_tl          { \minimalist_bfseries: \g_minimalist_title_font_common_tl }
\tl_gset:Nn \g_minimalist_title_font_chapter_tl       { \minimalist_bfseries: \g_minimalist_title_font_common_tl }
\tl_gset:Nn \g_minimalist_title_font_section_tl       { \minimalist_bfseries: }
\tl_gset:Nn \g_minimalist_title_font_subsection_tl    { \minimalist_bfseries: }
\tl_gset:Nn \g_minimalist_title_font_subsubsection_tl { \minimalist_bfseries: \itshape }
\tl_gset:Nn \g_minimalist_title_font_paragraph_tl     { \minimalist_bfseries: \scshape }
%</minimalist-classical>

\bool_if:NF \l__minimalist_fast_bool
  {
    \RequirePackage { tikz }
    \ExplSyntaxOff
    \usetikzlibrary{calc,shadings}
    \ExplSyntaxOn
    \RequirePackage { tikzpagenodes } % For `current page text area`
  }

\bool_if:NTF \l__minimalist_fast_bool
  {
    \tl_const:Nn \l_minimalist_sep_bar { $|$ }
  }
  {
    \tl_const:Nn \l_minimalist_sep_bar
      {
        \skip_horizontal:n { .1em }
        \tikz[baseline=.125em] \draw[line~width=.9pt] (0,0) -- (0,.9em);
        \skip_horizontal:n { .1em }
      }
  }

%%================================
%%  Footer
%%================================
\RequirePackage { geometry }
\RequirePackage { fancyhdr }
\RequirePackage { extramarks }

\hook_gput_code:nnn { begindocument/before } { minimalist }
  {
    \fancyhfoffset { 0pt }
  }

\tl_new:N \l_minimalist_leftmark_tl
\tl_new:N \l_minimalist_rightmark_tl

\tl_set:Nn \l_minimalist_leftmark_tl
  {
    \begin{minipage}[t]{.833\textwidth}
      \lastleftmark
    \end{minipage}
  }
\tl_set:Nn \l_minimalist_rightmark_tl
  {
    \begin{minipage}[t]{.833\textwidth}
      \filleft
      \lastrightmark
    \end{minipage}
  }

\fancypagestyle { fancy }
  {
    \fancyhf{}
    \if@twoside
      \fancyfoot[RO]{\small\textcolor{main-text!30!paper}{ \l_minimalist_rightmark_tl }
        \nobreakspace\nobreakspace\rlap{\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\nobreakspace\nobreakspace\thepage}}
      \fancyfoot[LE]{\small\leavevmode\llap{\thepage
        \nobreakspace\nobreakspace\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }}
        \nobreakspace\nobreakspace\textcolor{main-text!30!paper}{ \l_minimalist_leftmark_tl }}
    \else
      \fancyfoot[R]{\small\textcolor{main-text!30!paper}{ \l_minimalist_rightmark_tl }
        \nobreakspace\nobreakspace\rlap{\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\nobreakspace\nobreakspace\thepage}}
    \fi
    \renewcommand{\headrulewidth}{0pt}
  }
\pagestyle{fancy}

\fancypagestyle { plain }
  {
    \fancyhf{}
    \if@twoside
      \fancyfoot[RO]{\small
        \nobreakspace\rlap{\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\nobreakspace\nobreakspace\thepage}}
      \fancyfoot[LE]{\small\leavevmode\llap{\thepage
        \nobreakspace\nobreakspace\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }}}
    \else
      \fancyfoot[R]{\small
        \nobreakspace\rlap{\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\nobreakspace\nobreakspace\thepage}}
    \fi
    \renewcommand{\headrulewidth}{0pt}
  }

\bool_if:NTF \l__minimalist_is_book_bool
  {
    \bool_if:NTF \l__minimalist_fast_bool
      {
        \newcommand{ \minimalist_draw_help_line: }{}
      }
      {
        \newcommand{ \minimalist_draw_help_line: }{
            \begin{tikzpicture}[remember~picture,overlay]
                \foreach\i in {0,1,...,5}{
                    \fill[opacity=0.12-0.02*\i]
                        ($(current~page~text~area.north~east)
                            +(-\i*0.5em-.025em,-10pt+\i*1.1pt)$)
                        rectangle ($(current~page~text~area.south~east)
                            +(-\i*0.5em+.025em,10pt-\i*1.1pt)$);
                    \shade[top~color=paper,bottom~color=main-text,opacity=0.12-0.02*\i]
                        ($(current~page~text~area.north~east)
                            +(-\i*0.5em-.025em,2pt)$)
                        rectangle ($(current~page~text~area.north~east)
                            +(-\i*0.5em+.025em,-10pt+\i*1.1pt)$);
                    \shade[top~color=main-text,bottom~color=paper,opacity=0.12-0.02*\i]
                        ($(current~page~text~area.south~east)
                            +(-\i*0.5em-.025em,-2pt)$)
                        rectangle ($(current~page~text~area.south~east)
                            +(-\i*0.5em+.025em,10pt-\i*1.1pt)$);
                }
            \end{tikzpicture}
        }
      }
    \fancypagestyle{part}{
        \fancyhf{}
        \renewcommand{\headrulewidth}{0pt}
        \fancyhead[C]{ \minimalist_draw_help_line: }
    }
    \addtolength{\headheight}{20pt}
    \addtolength{\topmargin}{-20pt}
    \if@twoside
        \renewcommand{\chaptermark}[1]{\markboth{\textsc{#1}}{}}
    \else
        \renewcommand{\chaptermark}[1]{\markboth{\textsc{#1}}{\textsc{#1}}}
    \fi
    \renewcommand*{\sectionmark}[1]{
      \markright{\protect\g_minimalist_section_decoration_char_tl\nobreakspace\arabic{section}\nobreakspace\protect\g_minimalist_section_decoration_char_tl\nobreakspace\nobreakspace\nobreakspace#1}}
  }
  {
    \if@twoside
        \renewcommand*{\sectionmark}[1]{\markboth{\textsc{#1}}{}}
    \else
        \renewcommand*{\sectionmark}[1]{\markboth{\textsc{#1}}{\textsc{#1}}}
    \fi
  }

%%================================
%%  Line numbers
%%================================
\PassOptionsToPackage { pagewise,mathlines } { lineno }
\RequirePackage { linenoamsmath }
\renewcommand{\linenumberfont}{\ttfamily\color{main-text!7!paper}\footnotesize}
\setlength{\linenumbersep}{1em}

\newif\ifLNturnsON
\def\LocallyStopLineNumbers{\LNturnsONfalse
    \ifLineNumbers\LNturnsONtrue\fi\nolinenumbers}
\def\ResumeLineNumbers{\ifLNturnsON\linenumbers\fi}

\hook_gput_code:nnn { cmd/tableofcontents/before } { minimalist } { \LocallyStopLineNumbers }
\hook_gput_code:nnn { cmd/tableofcontents/after } { minimalist } { \ResumeLineNumbers }
\hook_gput_code:nnn { env/bibliography/before } { minimalist } { \LocallyStopLineNumbers }
\hook_gput_code:nnn { env/bibliography/after } { minimalist } { \ResumeLineNumbers }

%%================================
%%  Title format
%%================================
\RequirePackage [ explicit, newparttoc ] { titlesec }
\PassOptionsToPackage { normalem } { ulem }
\RequirePackage { ulem }

\cs_generate_variant:Nn \seq_set_split:Nnn { Nnx }
\cs_new:Nn \minimalist_apply_title_numbering_style:N
  {
%<*minimalist-plain>
    \seq_set_split:Nnx \l_tmpa_seq { . } { #1 }
    \seq_set_map:NNn \l_tmpb_seq \l_tmpa_seq { \usefont{U}{zeur}{b}{n} ##1 }
    \textcolor{main-text!39!paper}{ \seq_use:Nn \l_tmpb_seq { $.$ } }
%</minimalist-plain>
%<*minimalist-classical>
    #1
%</minimalist-classical>
  }

\newcommand{\partstring}{\MakeUppercase{{\partname\nobreakspace\protect\thepart}}}

\AddLanguageSetting
  {
    \renewcommand{\partstring}{\MakeUppercase{{\partname\nobreakspace\protect\thepart}}}
  }
\AddLanguageSetting [ schinese ]
  {
    \renewcommand{\partstring}{第 \nobreakspace\thepart\nobreakspace 部分}
  }
\AddLanguageSetting [ tchinese ]
  {
    \renewcommand{\partstring}{第 \nobreakspace\thepart\nobreakspace 部分}
  }
\AddLanguageSetting [ japanese ]
  {
    \renewcommand{\partstring}{第 \nobreakspace\thepart\nobreakspace 部}
  }

\bool_if:NTF \l__minimalist_is_book_bool
  {
    \setcounter{secnumdepth}{3}

    %% Part
    \titleclass{\part}{top} % make part like a chapter
    \titleformat{\part}[display]
      {\thispagestyle{part}
      \LocallyStopLineNumbers
      \g_minimalist_title_font_part_tl\filleft}
      {\partstring}
      {1em}
      {\fontsize{20}{0}\selectfont\MakeUppercase{#1}}
      [\ResumeLineNumbers]
    \titleformat{name=\part,numberless}[display]
      {\thispagestyle{part}
      \LocallyStopLineNumbers
        % \phantomsection\addcontentsline{toc}{part}{#1}
      \g_minimalist_title_font_part_tl\filleft}
      {\phantom{\MakeUppercase{\partname}}}
      {1em}
      {\fontsize{20}{0}\selectfont\MakeUppercase{#1}}
      [\ResumeLineNumbers]
    \titlespacing*{\part}{0pt}{5em}{6em}
    %% Text after part
    \newcommand{\parttext}[1]{
      \vfill
      \LocallyStopLineNumbers
      \begin{flushright}
        \begin{minipage}{0.833\textwidth}
          \color{main-text!80!paper}\raggedleft#1
        \end{minipage}
      \end{flushright}
      \ResumeLineNumbers
      \vfill\vfill
      \cleardoublepage
    }

    %% Chapter
    \titleformat{\chapter}
      {\thispagestyle{fancy}
      \LocallyStopLineNumbers
      \color{main-text!80!paper}\g_minimalist_title_font_chapter_tl\fontsize{16}{0}\selectfont}{}{0em}
      {\rlap{\hspace*{-.5em}{\color{main-text!12!paper}
        \fontsize{80}{0}\selectfont\raisebox{-7pt}{\thechapter}}}#1}
      [\ResumeLineNumbers]
    \titleformat{name=\chapter,numberless}
      {\thispagestyle{fancy}
      \LocallyStopLineNumbers
        % \phantomsection\addcontentsline{toc}{chapter}{#1}
      \color{main-text!80!paper}\g_minimalist_title_font_chapter_tl\fontsize{16}{0}\selectfont}{}{0em}
      {\rlap{\hspace*{-.5em}{\color{main-text!12!paper}
        \fontsize{80}{0}\selectfont\normalfont\raisebox{-7pt}{*}}}#1}
      [\ResumeLineNumbers]
  }
  {
    %% Part
    \titleformat{\part}[display]
      {\LocallyStopLineNumbers
      \g_minimalist_title_font_part_tl\filleft}
      {\partstring}
      {.3em}
      {\fontsize{16}{0}\selectfont\MakeUppercase{#1}}
      [\ResumeLineNumbers]
    \titleformat{name=\part,numberless}[display]
      {\LocallyStopLineNumbers
        % \phantomsection\addcontentsline{toc}{part}{#1}
      \g_minimalist_title_font_part_tl\filleft}
      {\phantom{\MakeUppercase{\partname}}}
      {.3em}
      {\fontsize{16}{0}\selectfont\MakeUppercase{#1}}
      [\ResumeLineNumbers]
    %% Text after part
    \newcommand{\parttext}[1]{
      \LocallyStopLineNumbers
      \begin{flushright}
        \begin{minipage}{0.833\textwidth}
          \color{main-text!80!paper}\raggedleft#1
        \end{minipage}
      \end{flushright}
      \ResumeLineNumbers
    }
  }

%% Section
%<*minimalist-plain>
\tl_gset:Nn \g_minimalist_section_decoration_char_tl {}
\titleformat{\section}
  {\LocallyStopLineNumbers
  \g_minimalist_title_font_section_tl\centering}
  {\raisebox{-.02\baselineskip}{\large \minimalist_apply_title_numbering_style:N { \thesection } }}{1em}
  {#1}
  [\ResumeLineNumbers]
%</minimalist-plain>
%<*minimalist-classical>
\renewcommand\thesection{\arabic{section}}
\newcommand\seculine{\bgroup\markoverwith{\color{main-text!27!paper}
    \rule[-0.9ex]{2pt}{.6pt}\hspace{-2pt}\rule[-1.2ex]{2pt}{.6pt}}\ULon}
\bool_if:NTF \l__minimalist_fast_bool
  {
    \tl_gset:Nn \g_minimalist_section_decoration_char_tl { \raisebox{.03em}{\normalfont/} }
  }
  {
    \tl_gset:Nn \g_minimalist_section_decoration_char_tl
      {
        \tikz[baseline=.125em] \draw[line~width=.9pt] (-.12em,0) -- (.12em,.9em);
      }
  }
\titleformat{\section}
  {\LocallyStopLineNumbers
  \g_minimalist_title_font_section_tl\centering}{}{0em}
  {{\small\textcolor{main-text!27!paper}{\footnotesize \g_minimalist_section_decoration_char_tl }
    \,\,\textcolor{main-text!90!paper}{\minimalist_bfseries:\arabic{section}}
    \,\,\textcolor{main-text!27!paper}{\footnotesize \g_minimalist_section_decoration_char_tl }}\\
    \seculine{#1}}
  [\ResumeLineNumbers]
\titleformat{name=\section,numberless}
  {\LocallyStopLineNumbers
    % \phantomsection\addcontentsline{toc}{section}{#1}
  \g_minimalist_title_font_section_tl\centering}{}{0em}
  {\seculine{#1}}
  [\ResumeLineNumbers]
%</minimalist-classical>

%% Subsection
%<*minimalist-plain>
\titleformat{\subsection}
  {\LocallyStopLineNumbers
  \g_minimalist_title_font_subsection_tl}
  { \minimalist_apply_title_numbering_style:N { \thesubsection } }{.75em}
  {#1}
  [\ResumeLineNumbers]
%</minimalist-plain>
%<*minimalist-classical>
\renewcommand\thesubsection{
  \ifnum\c@section=0\else\arabic{section}.\fi\arabic{subsection}}
\newcommand\subseculine{\bgroup\markoverwith{\color{main-text!27!paper}
  \rule[-1ex]{2pt}{.75pt}}\ULon}
\titleformat{\subsection}
  {\LocallyStopLineNumbers
  \g_minimalist_title_font_subsection_tl}{}{0em}
  {\subseculine{\thesubsection\nobreakspace\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\nobreakspace #1}}
  [\ResumeLineNumbers]
\titleformat{name=\subsection,numberless}
  {\LocallyStopLineNumbers
  \g_minimalist_title_font_subsection_tl}{}{0em}
  {\subseculine{#1}}
  [\ResumeLineNumbers]
%</minimalist-classical>

%% Subsubsection
%<*minimalist-plain>
\bool_if:NTF \l__minimalist_runin_bool
  {
    \titleformat{\subsubsection}[runin]
      {\g_minimalist_title_font_subsubsection_tl}
      { \minimalist_apply_title_numbering_style:N { \thesection } }{.5em}
      {#1.}[\hspace*{.3em}]
  }
  {
    \titleformat{\subsubsection}
      {\LocallyStopLineNumbers
      \g_minimalist_title_font_subsubsection_tl}
      { \minimalist_apply_title_numbering_style:N { \thesubsubsection } }{.5em}
      {#1}
      [\ResumeLineNumbers]
  }
%</minimalist-plain>
%<*minimalist-classical>
\bool_if:NTF \l__minimalist_runin_bool
  {
    \titleformat{\subsubsection}[runin]
      {\color{main-text!70!paper}\g_minimalist_title_font_subsubsection_tl}
      {\scalebox{0.9}{\thesubsubsection}}{.33em}
      {#1.}[\hspace*{.3em}]
  }
  {
    \titleformat{\subsubsection}
      {\LocallyStopLineNumbers
      \color{main-text!70!paper}\g_minimalist_title_font_subsubsection_tl}
      {\scalebox{0.9}{\thesubsubsection}}{.33em}
      {#1}
      [\ResumeLineNumbers]
  }
%</minimalist-classical>

%% Paragraph
\titleformat{\paragraph}[runin]
  { \g_minimalist_title_font_paragraph_tl }{\theparagraph}{1em}{#1}

\titlespacing{\section}{0pt}{\baselineskip}{.6\baselineskip}
\titlespacing{\subsection}{0pt}{.75\baselineskip}{.4\baselineskip}
\titlespacing{\subsubsection}{0pt}{.5\baselineskip}{.3\baselineskip}

%%================================
%%  ToC format
%%================================
\RequirePackage { titletoc }
\titlecontents{part}
  [0em]
  {\addvspace{1.5pc}\filcenter\normalfont}
  {\thecontentslabel\nopagebreak\\\nopagebreak\uppercase}
  {}
  {} % without page number
  [\addvspace{.5pc}]

\bool_if:NTF \l__minimalist_is_book_bool
  {
    \titlecontents{chapter}
      [2em] % i.e., 0em (part) + 2em
      {\addvspace{.5pc}\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{2em}}
      {\hspace*{-2em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
%<*minimalist-plain>
    \titlecontents{section}
      [4em] % i.e., 2em (chapter) + 2em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{2em}}
      {\hspace*{-2em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
%</minimalist-plain>
%<*minimalist-classical>
    \titlecontents{section}
      [4em] % i.e., 2em (chapter) + 2em
      {\normalfont}
      {\contentslabel[\textcolor{main-text!27!paper}{\small\g_minimalist_section_decoration_char_tl}\,\textcolor{main-text!90!paper}{ \minimalist_apply_title_numbering_style:N { \thecontentslabel } }\,\textcolor{main-text!27!paper}{\small\g_minimalist_section_decoration_char_tl}]{2em}}
      {\hspace*{-2em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
%</minimalist-classical>
    \titlecontents{subsection}
      [7em] % i.e., 4em (section) + 3em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{2.75em}}
      {\hspace*{-2.75em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
    \titlecontents{subsubsection}
      [9.5em] % i.e., 7em (subsection) + 3.5em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{3.25em}}
      {\hspace*{-3.25em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
  }
  {
    \titlecontents{section}
      [2em] % i.e., 0em (part) + 2em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{1.75em}}
      {\hspace*{-1.75em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
    \titlecontents{subsection}
      [4.5em] % i.e., 2em (section) + 2.5em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{2.25em}}
      {\hspace*{-2.25em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
    \titlecontents{subsubsection}
      [7.5em] % i.e., 4.5em (subsection) + 3em
      {\normalfont}
      {\contentslabel[ \minimalist_apply_title_numbering_style:N { \thecontentslabel } ]{2.75em}}
      {\hspace*{-2.75em}}
      {\titlerule*[1em]{\textcolor{main-text!15!paper}{.}}\contentspage}
  }

%%================================
%%  Lists
%%================================
\RequirePackage { enumitem }
\setlist{noitemsep}
% \setlist{topsep = .1\baselineskip, parsep=0pt, itemsep=.05\baselineskip}
\setlist[enumerate]{labelsep=*, leftmargin=*}
\setlist[enumerate,1]{label=\arabic*$)$,
    ref = \arabic*$)$}
\setlist[enumerate,2]{label=\emph{\roman*}$)$,
    ref = \arabic{enumi}.\emph{\roman*}$)$}
\setlist[enumerate,3]{label=\emph{\alph*}$)$,
    ref = \arabic{enumi}.\emph{\roman{enumii}}.\emph{\alph*}$)$}
\setlist[description]{font=\normalfont\minimalist_bfseries:}
%<*minimalist-classical>
\newcommand\desculine{\colorlet{currentcolor}{.}\bgroup\markoverwith{\color{currentcolor!55!paper}
  \rule[-.45ex]{2pt}{.75pt}}\ULon}
\renewcommand{\descriptionlabel}[1]{
  \hspace{\labelsep}\normalfont\desculine{#1}
}
%</minimalist-classical>

\setlist[itemize]{leftmargin=*}
\AddLanguageSetting { \setlist[itemize,1]{label=\colorlet{currentcolor}{.}\textcolor{currentcolor!27!paper}{$\bullet$}} }
\AddLanguageSetting [french] { \setlist[itemize,1]{label=\colorlet{currentcolor}{.}\textcolor{currentcolor!55!paper}{---}} }
\setlist[itemize,2]{label=\colorlet{currentcolor}{.}\textcolor{currentcolor!27!paper}{--}}
\setlist[itemize,3]{label=\colorlet{currentcolor}{.}\textcolor{currentcolor!27!paper}{\texttt{*}}}

%%================================
%%  Blank page
%%================================
\newcommand{\blinkpagetext}{This~page~is~intentionally~left~blank}
\renewcommand{\cleardoublepage}{
  \relax
  \clearpage
  \if@twoside\ifodd\c@page\relax\else
  \thispagestyle{empty}
  \hook_gput_next_code:nn { shipout/background }
    {
      \put(0.5\paperwidth,-0.5\paperheight){
      \makebox[0pt]{\large\color{main-text!10!paper}\blinkpagetext}}
    }
  \null\newpage\fi\fi
}

%%================================
%%  Draft mark
%%================================
\RequirePackage { projlib-draft }

%%================================
%%  Theorems
%%================================
\RequirePackage { mathtools }
\RequirePackage { amsthm }

%<*minimalist-plain>
\bool_if:NTF \l__minimalist_theorem_in_new_line_bool
  {
    \newtheoremstyle{simple}
      {}{}
      {\normalfont}{}
      {\normalfont}{}
      {\newline}
      {{\thmname{#1}\nobreakspace\thmnumber{#2}}
        {\color{main-text!50!paper}\thmnote{\hspace{.4em}\ensuremath{(\text{#3})}}}\smallskip}
  }
  {
    \newtheoremstyle{simple}
      {}{}
      {\normalfont}{}
      {\normalfont}{}
      {0pt}
      {{\thmname{#1}\nobreakspace\thmnumber{#2}}
        {\color{main-text!50!paper}\thmnote{\hspace{.4em}\ensuremath{(\text{#3})}}}\nobreakspace\nobreakspace{\normalfont\textcolor{main-text!27!paper}{---}}\nobreakspace\nobreakspace}
  }
%</minimalist-plain>
%<*minimalist-classical>
\def\simpleqedsymbol{
  \makebox[1em]{\rlap{\textcolor{main-text!12!paper}{\rule[-0.1em]{.95em}{.95em}}}{\kern.07em\raisebox{.07em}{\textcolor{paper}{\rule[-0.1em]{.81em}{.81em}}}\kern.07em}}}
\bool_if:NTF \l__minimalist_theorem_in_new_line_bool
  {
    \newtheoremstyle{simple}
      {.5\baselineskip}{.5\baselineskip}
      {\normalfont}{}
      {\normalfont}{}
      {\newline}
      { \global\let\qedsymbol\simpleqedsymbol
        {\thmname{#1}\nobreakspace\thmnumber{#2}}
        \thmnote{\hspace{.4em}\textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\hspace{.4em}\color{main-text!50!paper}\ensuremath{(\text{#3})}}
        \smallskip
        \pushQED{\qed}
      }
  }
  {
    \newtheoremstyle{simple}
      {.5\baselineskip}{.5\baselineskip}
      {\normalfont}{}
      {\normalfont}{}
      {0pt}
      { \global\let\qedsymbol\simpleqedsymbol
        {\thmname{#1}\nobreakspace\thmnumber{#2}}\hspace{.4em}
        \textcolor{main-text!27!paper}{ \l_minimalist_sep_bar }\hspace{.4em}
        \color{main-text!50!paper}\thmnote{\ensuremath{(\text{#3})}\nobreakspace\nobreakspace}
        \pushQED{\qed}
      }
  }
\def\@endtheorem{\global\let\qedsymbol\simpleqedsymbol
  \popQED\endtrivlist\@endpefalse
  \global\let\qedsymbol\qedsymbolOriginal}
%</minimalist-classical>

\theoremstyle{simple}

\renewcommand{\qedsymbol}{
  \makebox[1em]{\color{main-text!27!paper}\rule[-0.1em]{.95em}{.95em}}}
\let\qedsymbolOriginal\qedsymbol

\bool_if:NTF \l__minimalist_fast_bool
  {
    \providecommand{\phantomsection}{}
    \RequirePackage { url }
    \newcommand{\href}[2]{#2}
  }
  {
    \PassOptionsToPackage { hidelinks,linktoc=all } { hyperref }
    \RequirePackage { bookmark }
    \RequirePackage { hyperref }
  }

% \PassOptionsToPackage { simplename } { projlib-theorem }
\RequirePackage { projlib-theorem }

\exp_args:No \SetTheorem { \c_projlib_theorem_supported_clist }
  {
    name style = {
      , heading style = {
          , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
          , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
        }
    }
  }

\SetTheorem { remark }
  {
    name style = {
      , heading style = {
          , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
          , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
          , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
        }
    }
  }

\bool_if:NF \l__projlib_theorem_complexname_bool
  {
    \exp_args:No \SetTheorem { \c_projlib_theorem_supported_clist }
      {
        name style = {
          , crefname style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
          , Crefname style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textsc
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
          , numbering style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
        }
      }

    \SetTheorem { remark }
      {
        name style = {
          , crefname style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
          , Crefname style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl\textit
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
          , numbering style = {
              , english = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , french = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , ngerman = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , italian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , portuguese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , brazilian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , spanish = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , schinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , tchinese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , japanese = \minimalist_bfseries:\g_minimalist_title_font_common_tl
              , russian = \minimalist_bfseries:\g_minimalist_title_font_common_tl
            }
        }
      }
  }


\bool_if:NF \l__minimalist_fast_bool
  {
    \bool_if:NT \l__minimalist_theorem_in_new_line_bool
      {
        \PassOptionsToPackage { many } { tcolorbox }
        \RequirePackage { tcolorbox }
        \cs_new_protected:Nn \minimclass_box_environment:n
          {
            \hook_gput_code:nnn { env/#1/before } { minimalist }
              {
                \LocallyStopLineNumbers
                \begin { tcolorbox }
                  [
                    enhanced~jigsaw,
                    frame~hidden,
                    interior~hidden,
                    top = 0pt, bottom = 0pt,
                    left = 0pt, right = 0pt,
                    boxrule = 0pt, boxsep = 0pt,
                    before~skip = 1em+\parskip,
                    after~skip = 1.2em+\parskip,
                    breakable, lines~before~break=3,
                  ]
              }
            \hook_gput_code:nnn { env/#1/after } { minimalist }
              {
                \end { tcolorbox }
                \ResumeLineNumbers
              }
          }
        \exp_args:No \clist_map_inline:nn { \c_projlib_theorem_supported_clist }
          {
            \minimclass_box_environment:n { #1 }
            \minimclass_box_environment:n { #1 * }
          }
      }
  }

%%================================
%%  Index
%%================================
\hook_gput_code:nnn { begindocument/before } { minimalist }
{
  \hook_gput_code:nnn { cmd/printindex/before } { minimalist } { \LocallyStopLineNumbers }
  \hook_gput_code:nnn { cmd/printindex/after } { minimalist } { \ResumeLineNumbers }
}


\bool_if:NF \l__minimalist_is_book_bool {

%%================================
%%  Title block style
%%================================
%<*minimalist-plain>
\renewcommand{\@maketitle}{
  \LocallyStopLineNumbers
  \begin{center}
    \let\footnote\thanks
    {\minimalist_bfseries:\sffamily\scshape\Large\@title}\\\bigskip
    \color{main-text!80!paper}
    {\small\scshape\@author}
    \par\smallskip\vspace{-\parskip}
    {\small\@date}
  \end{center}
  \ifx\@date\@empty\medskip\fi
  \medskip\par
  \ResumeLineNumbers
}
%</minimalist-plain>
%<*minimalist-classical>
\renewcommand{\@maketitle}{
  \LocallyStopLineNumbers
  \noindent
  {\textcolor{main-text!27!paper}{\rule{\textwidth}{0.75pt}}}
  % \vspace{-\parskip}
  \vspace{-.5\baselineskip}
  \begin{flushright}
    \let\footnote\thanks
    {\minimalist_bfseries:\@title}\\\medskip
    \color{main-text!80!paper}
    {\small\scshape\@author}
    \par\vspace{-\parskip}\vspace{2pt}
    {\small\@date}
  \end{flushright}
  % \vspace{-\parskip}
  \vspace{-.5\baselineskip}
  \ifx\@date\@empty
      \vspace{\baselineskip}
      \vspace{1.2\parskip}
  \else
      \vspace{-.5\baselineskip}
  \fi
  {\textcolor{main-text!27!paper}{\rule{\textwidth}{0.75pt}}\par}
  \ResumeLineNumbers
}
%</minimalist-classical>

\hook_gput_code:nnn { cmd/maketitle/after } { minimalist } { \thispagestyle{fancy} }

%%================================
%%  Abstract style
%%================================
%<*minimalist-plain>
\renewenvironment{abstract}
  {
    \LocallyStopLineNumbers
    \vspace{-.5\baselineskip}
    \begin{center}
      { \g_minimalist_title_font_section_tl \scshape \small\abstractname}\\
      \vspace{-.3\baselineskip}
      \begin{minipage}[t]{.833\textwidth}
        \vspace{0pt}
        \color{main-text!80!paper}
        \footnotesize
        \parindent=2em
  }
  {
      \end{minipage}
    \end{center}
    \medskip
    \ResumeLineNumbers
  }
%</minimalist-plain>
%<*minimalist-classical>
\renewenvironment{abstract}
  {
    \LocallyStopLineNumbers
    \begin{flushright}
      { \g_minimalist_title_font_section_tl \scshape \small\abstractname}\par
      \vspace{-\parskip}
      \vspace{-.25\baselineskip}
      \begin{minipage}[t]{.833\textwidth}
        \vspace{0pt}
        \color{main-text!80!paper}
        \footnotesize
        \parindent=2em
  }
  {
      \end{minipage}
    \end{flushright}
    \bigskip
    \ResumeLineNumbers
  }
%</minimalist-classical>

%%================================
%%  Keyword environment
%%================================
\DefineMultilingualText { \keywordname }
  {
    EN = Keywords                               ,
    FR = Mots~clés                              ,
    DE = Schlüsselwörter                        ,
    IT = Parole~chiave                          ,
    PT = Palavras~chave                         ,
    BR = Palavras~chave                         ,
    ES = Palabras~clave                         ,
    CN = 关键词                                 ,
    TC = 關鍵詞                                 ,
    JP = キーワード                             ,
    RU = Ключевые~слова                         ,
  }

%<*minimalist-plain>
\newenvironment{keyword}{
  \LocallyStopLineNumbers
  \vspace{-.75\baselineskip}
  \begin{center}
    {\minimalist_bfseries:\scshape\small\keywordname}\\
    \vspace{-.3\baselineskip}
    \begin{minipage}[t]{.833\textwidth}
      \vspace{0pt}
      \color{main-text!80!paper}
      \footnotesize
      \parindent=2em
      \begin{center}
}{
      \end{center}
    \end{minipage}
  \end{center}
  \medskip
  \ResumeLineNumbers
}
%</minimalist-plain>
%<*minimalist-classical>
\newenvironment{keyword}{
  \LocallyStopLineNumbers
  \vspace{-.5\baselineskip}
  \begin{flushright}
    {\minimalist_bfseries:\scshape\small\keywordname}\par
    \vspace{-\parskip}
    \vspace{-.30\baselineskip}
    \begin{minipage}[t]{.833\textwidth}
      \vspace{0pt}
      \color{main-text!80!paper}
      \footnotesize
      \parindent=2em
      \raggedleft
}{
    \end{minipage}
  \end{flushright}
  \bigskip
  \ResumeLineNumbers
}
%</minimalist-classical>

%%================================
%%  Simulate features of amsart
%%================================
\PassOptionsToPackage { amsfashion } { projlib-author }
\RequirePackage { projlib-author }

}
%</style>

\endinput